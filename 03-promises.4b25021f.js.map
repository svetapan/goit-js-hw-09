{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,uBAC9BE,EAAWH,SAASC,cAAc,yBAuBxC,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACzB,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAEpBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,GAAQ,GAE5BA,EAAM,G,CAhCFN,SAASC,cAAc,SAE/Be,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAIC,iBAEJ,IAAIC,EAAgBC,OAAOrB,EAAMsB,OAEjC,IAAK,IAAIC,EAAI,EAAGA,GAAKnB,EAASkB,MAAOC,GAAK,EACxClB,EAAckB,EAAGH,GACdI,MAAK,EAAGT,SAAAU,EAAUT,MAAAU,MACjB5B,EAAA6B,OAAOC,QAAQ,uBAAqBH,QAAiBC,MAAU,IAEhEG,OAAM,EAAGd,SAAAe,EAAUd,MAAAe,MAClBjC,EAAA6B,OAAOK,QAAQ,sBAAoBF,QAAiBC,MAAU,IAGlEX,GAAiBC,OAAOlB,EAAKmB,M,IAkBjCjB,EAAc,EAAG,MACdmB,MAAK,EAAGT,SAAAkB,EAAUjB,MAAAkB,MACjBC,QAAQC,IAAI,uBAAqBH,QAAiBC,MAAU,IAE7DL,OAAM,EAAGd,SAAAsB,EAAUrB,MAAAsB,MAClBH,QAAQC,IAAI,sBAAoBC,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[ name=\"step\"]');\nconst position = document.querySelector('input[ name=\"amount\"]');\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  let intervaldelay = Number(delay.value);\n\n  for (let i = 1; i <= position.value; i += 1) {\n    createPromise(i, intervaldelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    intervaldelay += Number(step.value);\n  }\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      \n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay)\n  });\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$delay","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$position","$47d4ff9957288465$var$createPromise","position3","delay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","addEventListener","evt","preventDefault","intervaldelay","Number","value","i","then","position1","delay1","Notify","success","catch","position2","delay2","failure","position4","delay4","console","log","position5","delay5"],"version":3,"file":"03-promises.4b25021f.js.map"}